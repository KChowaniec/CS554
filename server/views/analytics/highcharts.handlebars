<script src="https://fb.me/react-15.0.1.js"></script>
<script src="https://fb.me/react-dom-15.0.1.js"></script>
<script src="http://code.highcharts.com/highcharts.js"></script>
<link rel="stylesheet" href="/public/css/analytics.css" type="text/css" />
<div id="react-bydecade" class="chart floatL"></div>
<div id="react-topfifteen" class="chart floatR clearR"></div>
<div id="react-bygenre" class="chart floatL"></div>
<div id="react-byrev" class="chart floatR clearR"></div>
<script type="text/javascript">

Highcharts.setOptions({
	lang: {thousandsSep: ","}
});

var Chart = React.createClass({
        // When the DOM is ready, create the chart.
        componentDidMount: function () {
            // Extend Highcharts with modules
            if (this.props.modules) {
                this.props.modules.forEach(function (module) {
                    module(Highcharts);
                });
            }
            // Set container which the chart should render to.
            this.chart = new Highcharts[this.props.type || "Chart"](this.props.container, this.props.options);
        }
        , //Destroy chart before unmount.
        componentWillUnmount: function () {
            this.chart.destroy();
        }
        , //Create the div which the chart will be rendered to.
        render: function () {
            return React.createElement('div', {
                id: this.props.container
            });
        }
    })
    , element
    , element2
    , element3
    , element4
;

element = React.createElement(Chart, {
    container: 'chart'
    , options: {
        chart: {
					plotBackgroundColor: null,
					plotBorderWidth: null,
					plotShadow: false,
					type: 'pie'
				},
				title: {
					text: 'Movies Count by Decade'
				},
				tooltip: {
					pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
				},
				plotOptions: {
					pie: {
						allowPointSelect: true,
						cursor: 'pointer',
						dataLabels: {
							enabled: false
						},
						showInLegend: true
					}
				},
				series: [{data:[{{#each resByDecade}}
                                    {{#_id}}
                                        {name:"{{yearRange}}",
                                    {{/_id}}
                                    y:{{count}} },
                                {{/each}}
                                ]}]
    }
});
    

element2 = React.createElement(Chart, {
    container: 'chart2'
    , options: {
        chart: {
					type: 'bar'
				},
				title: {
					text: 'Top 15 Movies by Ranking'
				},
				//tooltip: {
				//	pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
				//},
                xAxis: {
                    categories: [
                        {{#each resTopFifteen}}
                        "{{Title}}",
                        {{/each}}
                    ],
                    title: {
                        text: null
                    }
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: 'Rank',
                        align: 'high'
                    },
                    labels: {
                        overflow: 'justify'
                    }
                },
				plotOptions: {
                    bar: {
                        dataLabels: {
                            enabled: true
                        }
                    }
                },
				series: [{name:"Rank",data:[{{#each resTopFifteen}}
                        {{Rank}},
                        {{/each}}
                                ]}]
    }
});
    
element3 = React.createElement(Chart, {
    container: 'chart3'
    , options: {
        chart: {
					plotBackgroundColor: null,
					plotBorderWidth: null,
					plotShadow: false,
					type: 'pie'
				},
				title: {
					text: 'Movies Count by Genre'
				},
				tooltip: {
					pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
				},
				plotOptions: {
					pie: {
						allowPointSelect: true,
						cursor: 'pointer',
						dataLabels: {
							enabled: false
						},
						showInLegend: true
					}
				},
				series: [{data:[{{#each resByGenre}}
                                    {{#_id}}
                                        {name:"{{genre}}",
                                    {{/_id}}
                                    y:{{count}} },
                                {{/each}}
                                ]}]
    }
});

element4 = React.createElement(Chart, {
    container: 'chart4'
    , options: {
        chart: {
					type: 'bar'
				},
				title: {
					text: 'Top 15 Movies by Revenue'
				},
				//tooltip: {
				//	pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
				//},
                xAxis: {
                    categories: [
                        {{#each resTopRev}}
                        "{{Title}}",
                        {{/each}}
                    ],
                    title: {
                        text: null
                    }
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: 'Revenue',
                        align: 'high'
                    },
                    labels: {
                        overflow: 'justify'
                    }
                },
				plotOptions: {
                    bar: {
                        dataLabels: {
                            enabled: false
                        }
                    }
                },
				series: [{name:"Revenue",data:[{{#each resTopRev}}
                        {{Revenue}},
                        {{/each}}
                                ]}]
    }
});
    
ReactDOM.render(element, document.getElementById('react-bydecade'));
ReactDOM.render(element2, document.getElementById('react-topfifteen'));
ReactDOM.render(element3, document.getElementById('react-bygenre'));
ReactDOM.render(element4, document.getElementById('react-byrev'));
</script>